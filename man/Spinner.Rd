% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R, R/documentation.R, R/examples.R
\name{Spinner}
\alias{Spinner}
\title{Spinner}
\usage{
Spinner(...)
}
\arguments{
\item{ariaLabel}{\code{string} \cr Alternative status label for screen reader}

\item{ariaLive}{\code{'assertive' | 'polite' | 'off'} \cr Politeness setting for label update announcement.}

\item{className}{\code{string} \cr Additional CSS class(es) to apply to the Spinner.}

\item{componentRef}{\verb{IRefObject<ISpinner>} \cr Optional callback to access the ISpinner interface. Use this instead of ref for accessing the public methods and properties of the component.}

\item{label}{\code{string} \cr The label to show next to the Spinner. Label updates will be announced to the screen readers. Use ariaLive to control politeness level.}

\item{labelPosition}{\code{SpinnerLabelPosition} \cr The position of the label in regards of the spinner animation.}

\item{size}{\code{SpinnerSize} \cr The size of Spinner to render. \{ extraSmall, small, medium, large \}}

\item{styles}{\verb{IStyleFunctionOrObject<ISpinnerStyleProps, ISpinnerStyles>} \cr Call to provide customized styling that will layer on top of the variant rules.}

\item{theme}{\code{ITheme} \cr Theme (provided through customization.)}

\item{type}{\code{SpinnerType} \cr Deprecated and will be removed at \>= 2.0.0. Use \code{SpinnerSize} instead.}
}
\description{
A Spinner is an outline of a circle which animates around itself indicating to the user that things are processing. A Spinner is shown when it's unsure how long a task will take making it the indeterminate version of a ProgressIndicator. They can be various sizes, located inline with content or centered. They generally appear after an action is being processed or committed. They are subtle and generally do not take up much space, but are transitions from the completed task.

For more details and examples visit the official \href{https://developer.microsoft.com/en-us/fluentui#/controls/web/Spinner}{docs}.
The R package can not handle each and every case, so for advanced use cases
you need to work using the original docs to achieve the desired result.
}
\examples{
library(shiny.fluent)

if (interactive()) {
  shinyApp(
    ui = withReact(
      Spinner(size = 3, label = "Loading, please wait...")
    ),
    server = function(input, output) {
    }
  )
}
}
